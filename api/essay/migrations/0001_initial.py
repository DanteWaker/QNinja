# Generated by Django 3.2.9 on 2021-12-09 14:27

import core.utils.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Essay",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateField(auto_now_add=True, verbose_name="Data de criação"),
                ),
                (
                    "updated_at",
                    models.DateField(
                        auto_now=True, verbose_name="Data da última modificação"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to=core.utils.models.file_upload_path,
                        verbose_name="Imagem da redação",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="essays",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Autor",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EssayTheme",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateField(auto_now_add=True, verbose_name="Data de criação"),
                ),
                (
                    "updated_at",
                    models.DateField(
                        auto_now=True, verbose_name="Data da última modificação"
                    ),
                ),
                ("name", models.TextField(verbose_name="Nome do Tema")),
                ("theme_file", models.FileField(verbose_name="Texto de Apoio")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SubscriptionPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateField(auto_now_add=True, verbose_name="Data de criação"),
                ),
                (
                    "updated_at",
                    models.DateField(
                        auto_now=True, verbose_name="Data da última modificação"
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("1", "Básico"),
                            ("2", "Intermediário"),
                            ("3", "Avançado"),
                        ],
                        max_length=1,
                        verbose_name="Nível do Plano",
                    ),
                ),
                ("duration", models.DateField(verbose_name="Duração")),
                ("credits", models.IntegerField(verbose_name="Creditos")),
                ("price", models.IntegerField(verbose_name="Preço")),
                ("is_active", models.BooleanField(verbose_name="Ativo")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserSubscriptionPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateField(auto_now_add=True, verbose_name="Data de criação"),
                ),
                (
                    "updated_at",
                    models.DateField(
                        auto_now=True, verbose_name="Data da última modificação"
                    ),
                ),
                ("credits_avaliable", models.FloatField(verbose_name="Creditos")),
                ("subscribed_at", models.DateField(verbose_name="Data de subscrição")),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscriptions",
                        to="essay.subscriptionplan",
                        verbose_name="Plano",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscription_plan",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EssayCorrection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateField(auto_now_add=True, verbose_name="Data de criação"),
                ),
                (
                    "updated_at",
                    models.DateField(
                        auto_now=True, verbose_name="Data da última modificação"
                    ),
                ),
                ("duration", models.DateField(verbose_name="Duração")),
                (
                    "rating",
                    models.CharField(
                        choices=[("1", 1), ("2", 2), ("3", 3), ("4", 4), ("5", 5)],
                        max_length=1,
                        verbose_name="Avaliação",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("PENDING", 1), ("IN PROGRESS", 2), ("COMPLETED", 3)],
                        max_length=15,
                        verbose_name="Status da correção",
                    ),
                ),
                (
                    "text_comment",
                    models.TextField(verbose_name="Comentário do corretor"),
                ),
                (
                    "audio_comment",
                    models.FileField(
                        upload_to=core.utils.models.file_upload_path,
                        verbose_name="Comentário de Áudio",
                    ),
                ),
                (
                    "competence_1",
                    models.PositiveIntegerField(verbose_name="Competência 1"),
                ),
                (
                    "competence_2",
                    models.PositiveIntegerField(verbose_name="Competência 2"),
                ),
                (
                    "competence_3",
                    models.PositiveIntegerField(verbose_name="Competência 3"),
                ),
                (
                    "competence_4",
                    models.PositiveIntegerField(verbose_name="Competência 4"),
                ),
                (
                    "competence_5",
                    models.PositiveIntegerField(verbose_name="Competência 5"),
                ),
                (
                    "corrector",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="corrections",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Corretor",
                    ),
                ),
                (
                    "essay",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="corrections",
                        to="essay.essay",
                        verbose_name="Redação",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="essay",
            name="theme",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="essays",
                to="essay.essaytheme",
                verbose_name="Tema",
            ),
        ),
    ]
